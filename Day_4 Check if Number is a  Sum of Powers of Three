Check if Number is a Sum of Powers of Three
Problem Statement
Given an integer n, determine whether it can be represented as the sum of distinct powers of three.

Approach
1. Base 3 Representation Check
Convert n to base 3.
If the base-3 representation only contains 0 and 1, return true.
If the base-3 representation contains 2, return false.
Algorithm
Extract digits of n in base 3 using n % 3.
If any digit is 2, return false.
Otherwise, keep dividing n by 3 until n == 0.
If no 2 is found, return true.
Time Complexity
𝑂(log3𝑛)
O(log3n) → Since we divide n by 3 at each step.
Space Complexity
𝑂(1)
O(1) → Only a few variables are used.
Pseudocode
Function isSumOfPowersOfThree(n):
    While n > 0:
        remainder = n % 3
        If remainder == 2:
            Return False
        n = n / 3
    Return True
Edge Cases Considered

full Implementation in java:
class Solution {
    public boolean checkPowersOfThree(int n) {
        while(n!= 0){
            int res = n%3;
            if(res == 2){
                return false;
            }
          n =  n/3;
        }
        return true;
    }
}
Smallest Inputs: n = 0 and n = 1 should return true as 0 is trivially valid, and 1 = 3^0.
Large Values: The function should work efficiently even for large values of n.
Numbers Containing 2 in Base 3: Must return false because we cannot reuse powers.













ChatGPT can make mistakes. Check important info.
